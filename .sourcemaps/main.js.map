{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/singleton/domain.worker.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/shared/interfaces.ts","../../src/singleton/util.ts","../../src/app/app.component.ts","../../src/app/lazy-pages.ts","../../src/singleton/singleton.module.ts","../../src/singleton/persist.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 110\n// module chunks = 3","var map = {\n\t\"../pages/local/local-game.module\": [\n\t\t290,\n\t\t2\n\t],\n\t\"../pages/remote/remote-game.module\": [\n\t\t291,\n\t\t1\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t292,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 151;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 3","import { Component } from '@angular/core';\n\n//import { AboutPage } from '../about/about';\n//import { ContactPage } from '../contact/contact';\n\nimport {LazyPages} from '@app/lazy-pages';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = LazyPages.LOCAL_GAME;\n  //tab2Root = LazyPages.REMOTE_GAME;\n  //tab3Root = LazyPages.SETTINGS;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Player, MoveSequence, GamePlayers, Game, TurnEvent, RecordType, BoardState } from '../shared/interfaces';\nimport { Injectable } from '@angular/core';\nimport { reduce, union, curry, difference } from 'lodash/fp';\nimport { Either } from 'monet';\nimport { Future } from 'fluture';\nimport { Utils} from './util';\nimport {cloneDeep, assign} from 'lodash';\n\n\n@Injectable()\nexport class DomainWorker {\n\n  constructor(){}\n\n  startGame(isLocal: boolean): Future<never, Game> {\n    //gen a new game id\n    const gameId = Utils.genId();\n\n    //define a local game\n    const newLocalGame: Game = {\n    _id: gameId,\n    type: RecordType.Game,\n    players: [\n      {name: 'Chris Nolan', turnId: 0, dbId: 'player0'},\n      {name: 'Al Hitchcock', turnId: 1, dbId: 'player1'}],\n      activeTurn: 0,\n      sequence: {\n        _id: Utils.genId(), //id will be a foriegn key of the game record\n        gameId: 'test',\n        type: RecordType.MoveSequence,\n        moves: []\n      },\n      gameInProgress: true,\n      playersReady: ['player0', 'player1']\n    };\n    localStorage.setItem('activeGame', gameId);\n    return Future.of(isLocal ? newLocalGame : newLocalGame);\n  }\n\n  //\n  updateGameSequence(game: Game, turn: TurnEvent) {\n    game.sequence.moves = union(game.sequence.moves, [turn])\n    return assign({}, game);\n  }\n\n  //provided a game object, generate a new board state for the UI to consume\n  newBoardState(game: Game) : BoardState {\n    const newBoardState = reduce((boardState, turnEvent: TurnEvent ) => {\n      boardState[turnEvent.move] = turnEvent.turn;\n      return boardState;\n    }, this.buildEmptyBoard())(game.sequence.moves);\n    return cloneDeep(newBoardState);\n  }\n\n  //compute a winner returning the player, or null to continue\n  determineWinner(moveSeq: MoveSequence, players: GamePlayers): Player | null {\n    //check to see if more then 9 moves have been made, if yes then exit left with a scratch game\n    //otherwise continue right\n    return (moveSeq.moves.length > 9 ? Either.Left({name:'Scratch Game!'}) : Either.Right(null))\n      .flatMap(isNull => {\n        //reduce the player TurnEvent[] into a string[] for simply winning combo comparison\n        //reduce was used over map because reduce provides clear intent on the resulting Type\n        // and allows the return type to be sometihng other than an array. in this case an object with 2 []s\n        const playerMoves = reduce((accum, val: TurnEvent) => {\n          accum['player' + val.turn] = union(accum['player' + val.turn], [val.move]);\n          return accum;\n        }, {player0: [], player1: []})(moveSeq.moves);\n\n        //function to determine a winning combo\n        const checkPlayerMoves = (moves, won, winningCombos:string[]) => {\n          //diff player moves against winning combos, if result is greater than 0, the player has won\n          const test = difference(winningCombos, moves)\n          return won ? true : test.length === 0\n        };\n\n        //check player0's move sequence for a winning combo\n        const p0 = reduce(curry(checkPlayerMoves)(playerMoves.player0), false)(this.winningCombinations);\n\n        //check player1's move sequence for a winning combo\n        const p1 = reduce(curry(checkPlayerMoves)(playerMoves.player1), false)(this.winningCombinations);\n\n        //if player0 won escape to the left, otherwise return player1\n        return (p0 ? Either.Left(players[0]) : Either.Right(p1));\n      })\n      // check player1 for a win, if player1 won, escape to the left, otherwise return isNull\n      //signaling a continue to the UI logic\n      .flatMap(p1DidWin => p1DidWin ? Either.Left(players[1]) : Either.Right(null))\n      //apply catamorph to lift the value out of the either monad with the identity function\n      .cata(v => v, v => v);\n  }\n\n  //lodash difference accounts for left to right or right to left same with top to bottom and vice versa\n  private winningCombinations = [\n    ['UL', 'UM', 'UR'], //across the top L to R\n    ['ML', 'MM', 'MR'], //across the middle  L to R\n    ['LL', 'LM', 'LR'], //across the bottom  L to R\n    ['UL', 'ML', 'LL'], //left column top to bottom\n    ['UM', 'MM', 'LM'], //middle column top to bottom`\n    ['UR', 'MR', 'LR'], //right column top to bottom\n    ['UL', 'MM', 'LR'], //top left to bottom right diagnoal\n    ['UR', 'MM', 'LL'], //top right to bottom left diagnoal\n  ];\n\n  //create a new empty board state\n  private buildEmptyBoard(): BoardState {\n    return cloneDeep({\n      UL: null, UM: null, UR: null,\n      ML: null, MM: null, MR: null,\n      LL: null, LM: null, LR: null\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/singleton/domain.worker.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { SingletonModule } from '@singleton/singleton.module'\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    TabsPage\n  ],\n  imports: [\n    SingletonModule,\n    IonicModule.forRoot(MyApp, {preloadModules: false})\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    TabsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","//valid moves\nexport type Move =\n  'UL' | 'UM' | 'UR' |\n  'ML' | 'MM' | 'MR' |\n  'LL' | 'LM' | 'LR';\n\nexport enum RecordType {\n  Player = 'player',\n  Game = 'game',\n  MoveSequence = 'move-sequence'\n}\n\n/**\nEach game is made up of a Game record and two MoveSequence records (one for each player)\na player writes to their own move sequence record and reads from the other players.\n**/\n\nexport interface Game {\n    _id: string;\n    _rev?: string;\n    type: RecordType.Game;\n    players: GamePlayers;\n    sequence: MoveSequence;\n    activeTurn: number;\n    gameInProgress: boolean;\n    playersReady: string[];\n}\n\nexport interface MoveSequence {\n  _id: string; //id will be a foriegn key of the game record\n  gameId: string;\n  type: RecordType.MoveSequence;\n  moves: TurnEvent[];\n}\n\n//this is a generated state to support the game-board component UI\nexport interface BoardState {\n  UL: number; UM: number; UR: number;\n  ML: number; MM: number; MR: number;\n  LL: number; LM: number; LR: number;\n}\n\n//particle supporting the MoveSequence Type and other UI elements\nexport interface TurnEvent {\n  move: Move;\n  turn: number;\n  time: number;\n}\n\nexport interface GamePlayers {\n  [index: number]: Player;\n}\n\nexport interface Player {\n  name: string;\n  turnId: number;\n  dbId: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/interfaces.ts","import { now, random } from 'lodash';\n\nexport class Utils {\n  static genId() {\n    return (now().toString(36) + random(78364164095).toString(36) + (now() % 37).toString(36)).toLowerCase();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/singleton/util.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = TabsPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/**\n * IMPORTANT : whenever a new page is created list the page string here, so it can be referred to by reference\n * in the event that a name change is needed, only one literal needs to be changed here.\n */\n\nexport class LazyPages {\n  static LOCAL_GAME = 'LocalGamePage';\n  static REMOTE_GAME = 'RemoteGamePage';\n  static SETTINGS = 'SettingsPage';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/lazy-pages.ts","import {NgModule, Optional, SkipSelf} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {Persistence} from '@singleton/persist';\nimport {DomainWorker} from '@singleton/domain.worker';\n\n@NgModule({\n  imports: [BrowserModule],\n  declarations: [],\n  providers: [Persistence, DomainWorker],\n  exports: [BrowserModule]\n})\nexport class SingletonModule {\n  constructor(@Optional() @SkipSelf() parentModule: SingletonModule) {\n    const coreModuleError = () => {\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only')\n    };\n    parentModule ? coreModuleError() : null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/singleton/singleton.module.ts","import {Injectable} from '@angular/core';\n// import { TurnEvent, Game, RecordType, BoardState, MoveSequence } from '@shared/interfaces';\n// import * as PouchDB from 'pouchdb';\n// import { Future, tryP } from 'fluture';\n// import {Utils} from '@singleton/util';\n// import { union, curry } from 'lodash';\n\n@Injectable()\nexport class Persistence {\n\n  //gameDb: PouchDB.Database;\n  //player0: PouchDB.Database;\n  //player1: PouchDB.Database;\n\n\n  constructor() {\n  }\n\n  init() {\n    //init databases\n    // this.gameDb = new PouchDB('http://35.165.4.114:5984/games', {auth:{username:'admin', password:'loveseat'}});\n    // this.player0 = new PouchDB('http://35.165.4.114:5984/player0', {auth:{username:'admin', password:'loveseat'}});\n    // this.player1 = new PouchDB('http://35.165.4.114:5984/player1', {auth:{username:'admin', password:'loveseat'}});\n  }\n\n  //updateMoveSequence(game: Game, turn: TurnEvent): Future<{}, BoardState> {\n    //write move to players game MoveSequence\n\n    //side effect to update current player's turn\n    // const gameState = tryP(() => <any>this.gameDb.get(game._id));\n    // gameState.chain((dbGame: Game) => {\n    //   dbGame.activeTurn = dbGame.activeTurn === 0 ? 1 : 0;\n    //   return tryP(() => this.gameDb.put(dbGame));\n    // })\n    // .fork(e => console.error(e), v => v);\n    //\n    // return tryP(() => this[turn.player.dbId].get(game._id))\n    // .chain((moveSeq: MoveSequence) => {\n    //\n    //   moveSeq.moves = union(moveSeq.moves, [turn])\n    //   //side effect to update moveSeq\n    //   this[turn.player.dbId].put(moveSeq);\n    //   return Future.of(moveSeq);\n    // })\n    // .chain(moveSeq => {\n    //   const partialAP:any = curry((moveSeq, moveSeq2) => this.buildBoardState(moveSeq, moveSeq2));\n    //   partialAP(moveSeq);\n    //   return Future.of(partialAP);\n    // })\n    // .ap(tryP(() => <any>this[turn.player.dbId === 'player0' ? 'player1' : 'player0'].get(game._id)))\n  //}\n\n  getActiveGame() {\n\n  }\n\n\n\n  setUserReady() {\n\n  }\n\n  completeGame() {\n    //const activeGameId = localStorage.getItem('activeGame');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/singleton/persist.ts"],"sourceRoot":""}